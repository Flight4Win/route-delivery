/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;


import entidad.Cliente;
import entidad.Paquete;
import entidad.Persona;
import utiles.IntVentanas;
import utiles.ImagenFondo;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.rmi.RemoteException;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import utiles.Conexion;


//import manejadorDB.controlador.ClienteControlador;
//import manejadorDB.controlador.EstadoControlador;
//import manejadorDB.controlador.PaqueteControlador;
//import manejadorDB.controlador.PersonaControlador;

/**
 *
 * @author ferna
 */
public class DBuscarPaquete extends javax.swing.JDialog implements IntVentanas{

    /**
     * Creates new form DBuscarPaquete
     */
    
    //PaqueteControlador pqtc = new PaqueteControlador();
    //PersonaControlador pc = new PersonaControlador();
    //ClienteControlador cc = new ClienteControlador();
    //EstadoControlador ec = new EstadoControlador();
    
    private final DefaultTableModel dtm ;
    private final TableColumnModel tcm;     
    
    private java.util.List<Paquete> reportePaquete = null;
        
    private Calendar c2;
    
    public DBuscarPaquete(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        centrarPantalla();
        
        dtm = (DefaultTableModel)tPaquetes.getModel();        
        tcm = (TableColumnModel)tPaquetes.getColumnModel();
        
        c2 = new GregorianCalendar();
        definirTabla();
        
        tfCodigoCliente.setVisible(false);
        rbCodigCliente.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgFiltros = new javax.swing.ButtonGroup();
        pFondo = new javax.swing.JPanel();
        lbIconoPaquete = new javax.swing.JLabel();
        tfCodigoPaquete = new javax.swing.JTextField();
        tfCodigoCliente = new javax.swing.JTextField();
        dccFechaRegistro = new com.toedter.calendar.JDateChooser();
        bCancelar = new javax.swing.JButton();
        bAceptar = new javax.swing.JButton();
        bBuscarCiente = new javax.swing.JButton();
        rbCodigCliente = new javax.swing.JRadioButton();
        rbCodigoPaquete = new javax.swing.JRadioButton();
        rbFechaRegistro = new javax.swing.JRadioButton();
        scTablaClientes = new javax.swing.JScrollPane();
        tPaquetes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Busqueda de Paquetes");
        setResizable(false);

        lbIconoPaquete.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbIconoPaquete.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIconoPaquete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/imagen/buscarPaquete.png"))); // NOI18N

        tfCodigoPaquete.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tfCodigoPaquete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCodigoPaqueteActionPerformed(evt);
            }
        });

        tfCodigoCliente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        dccFechaRegistro.setDateFormatString("dd/MM/yyyy");
        dccFechaRegistro.setMaxSelectableDate(new java.util.Date(253370786511000L));
        dccFechaRegistro.setMinimumSize(new java.awt.Dimension(20, 20));

        bCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bCancelar.setMnemonic('C');
        bCancelar.setText("Cancelar");
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });

        bAceptar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bAceptar.setMnemonic('A');
        bAceptar.setText("Aceptar");
        bAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAceptarActionPerformed(evt);
            }
        });

        bBuscarCiente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bBuscarCiente.setText("Buscar");
        bBuscarCiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarCienteActionPerformed(evt);
            }
        });

        bgFiltros.add(rbCodigCliente);
        rbCodigCliente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rbCodigCliente.setText("   Código Cliente");

        bgFiltros.add(rbCodigoPaquete);
        rbCodigoPaquete.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rbCodigoPaquete.setSelected(true);
        rbCodigoPaquete.setText("   Código de Paquete");

        bgFiltros.add(rbFechaRegistro);
        rbFechaRegistro.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rbFechaRegistro.setText("   Fecha de Registro");
        rbFechaRegistro.setToolTipText("");

        tPaquetes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        scTablaClientes.setViewportView(tPaquetes);

        javax.swing.GroupLayout pFondoLayout = new javax.swing.GroupLayout(pFondo);
        pFondo.setLayout(pFondoLayout);
        pFondoLayout.setHorizontalGroup(
            pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pFondoLayout.createSequentialGroup()
                .addGroup(pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pFondoLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(scTablaClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 746, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pFondoLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rbCodigoPaquete, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbFechaRegistro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbCodigCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfCodigoPaquete, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dccFechaRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(96, 96, 96)
                        .addGroup(pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bBuscarCiente, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbIconoPaquete, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(pFondoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190)
                .addComponent(bAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(208, 208, 208))
        );
        pFondoLayout.setVerticalGroup(
            pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pFondoLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pFondoLayout.createSequentialGroup()
                        .addComponent(rbCodigoPaquete)
                        .addGap(11, 11, 11)
                        .addComponent(rbCodigCliente)
                        .addGap(24, 24, 24)
                        .addComponent(rbFechaRegistro))
                    .addGroup(pFondoLayout.createSequentialGroup()
                        .addComponent(tfCodigoPaquete, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(tfCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(dccFechaRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pFondoLayout.createSequentialGroup()
                        .addComponent(lbIconoPaquete, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(bBuscarCiente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addComponent(scTablaClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(pFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_bCancelarActionPerformed

    private void bAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAceptarActionPerformed
        this.dispose();
    }//GEN-LAST:event_bAceptarActionPerformed

    private void bBuscarCienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarCienteActionPerformed
        limpiarTabla();
        if(rbCodigCliente.isSelected()){
            if(!tfCodigoCliente.getText().isEmpty()){
                buscarPaquetePorCodigoCliente();
            }            
        }else if (rbCodigoPaquete.isSelected()){
            if(!tfCodigoPaquete.getText().isEmpty()){
                buscarPaquetePorCodigoPaquete();
            }
        }else if(rbFechaRegistro.isSelected()){
            buscarPaquetePorFechaRegistro();
        }
    }//GEN-LAST:event_bBuscarCienteActionPerformed

    private void tfCodigoPaqueteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCodigoPaqueteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCodigoPaqueteActionPerformed

    private void limpiarTabla(){
        if(reportePaquete != null ){
            reportePaquete.clear();
        }        
        for (int i = 0; i < dtm.getRowCount(); i++) {
            dtm.removeRow(i);
            i-=1;
        }                
    }
    
    private void llenarTablaPaquetes(java.util.List<Paquete> reporte){
        //llenar tabla Emleados
        dtm.addColumn("Código");
            dtm.addColumn("Descripcion");
            dtm.addColumn("Emisor");
            dtm.addColumn("Receptor");
            dtm.addColumn("Origen");
            dtm.addColumn("Destino"); 
            dtm.addColumn("Estado");
        reporte.stream().map((p) -> {
            Object[] fila = new Object[dtm.getColumnCount()];
            //Cliente emisor = cc.buscarPorId(p.getIdcliente().getIdcliente()).get(0);
            Cliente emisor;
            try {
                emisor = Conexion.mr_cliente.buscarPorId_client(p.getIdcliente().getIdcliente()).get(0);
                Persona receptor = p.getIdpersona();                
                fila[0] = p.getCodigounico();
                fila[1] = p.getDescripcion();
                fila[2] = emisor.getIdpersona().getNombres()+" "+emisor.getIdpersona().getApellidopat()+" "+emisor.getIdpersona().getApellidomat();
                fila[3] = receptor.getNombres()+" "+receptor.getApellidopat()+" "+receptor.getApellidomat();
                fila[4] = p.getIdorigen().getIdlugar().getCiudad();
                fila[5] = p.getIddestino().getIdlugar().getCiudad();
                fila[6] = p.getIdestado().getNombre();                
            } catch (RemoteException ex) {
                Logger.getLogger(DBuscarPaquete.class.getName()).log(Level.SEVERE, null, ex);
            }
            return fila;
        }).forEach((fila) -> {
            dtm.addRow(fila);
        });                
        reportePaquete = reporte;
    }
    
    private void buscarPaquetePorCodigoCliente(){
        
//        llenarTablaPaquetes(pqtc.buscarPorCliente(tfCodigoCliente.getText()));
    }
    
    private void buscarPaquetePorCodigoPaquete(){
        try {
            //llenarTablaPaquetes(pqtc.buscarPorCodigo(tfCodigoPaquete.getText()));
            List<Paquete> paquetes = Conexion.mr_paquete.buscarPorCodigo(tfCodigoPaquete.getText());
            llenarTablaPaquetes(paquetes);
        } catch (RemoteException ex) {
            Logger.getLogger(DBuscarPaquete.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void buscarPaquetePorFechaRegistro(){
        try {
            Date fechadereg = new Date(dccFechaRegistro.getCalendar().get(Calendar.YEAR),
                    (dccFechaRegistro.getCalendar().get(Calendar.MONTH)),
                    (dccFechaRegistro.getCalendar().get(Calendar.DAY_OF_MONTH)),
                    c2.get(Calendar.HOUR_OF_DAY),
                    c2.get(Calendar.MINUTE),
                    c2.get(Calendar.SECOND) );
            List<Paquete> paquetes = Conexion.mr_paquete.buscarPorFechaRegistro(fechadereg);
            llenarTablaPaquetes(paquetes);
        } catch (RemoteException ex) {
            Logger.getLogger(DBuscarPaquete.class.getName()).log(Level.SEVERE, null, ex);
        }
    }    
    
    private void definirTabla(){        
            dtm.addColumn("Código");
            dtm.addColumn("Descripcion");
            dtm.addColumn("Emisor");
            dtm.addColumn("Receptor");
            dtm.addColumn("Origen");
            dtm.addColumn("Destino"); 
            dtm.addColumn("Estado");
            
            tcm.getColumn(0).setPreferredWidth(100);
            tcm.getColumn(1).setPreferredWidth(100);
            tcm.getColumn(2).setPreferredWidth(100);
            tcm.getColumn(3).setPreferredWidth(100);
            tcm.getColumn(4).setPreferredWidth(100);
            tcm.getColumn(5).setPreferredWidth(100);       
            tcm.getColumn(6).setPreferredWidth(100);  
        }
    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(DBuscarPaquete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(DBuscarPaquete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(DBuscarPaquete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(DBuscarPaquete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                DBuscarPaquete dialog = new DBuscarPaquete(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAceptar;
    private javax.swing.JButton bBuscarCiente;
    private javax.swing.JButton bCancelar;
    private javax.swing.ButtonGroup bgFiltros;
    private com.toedter.calendar.JDateChooser dccFechaRegistro;
    private javax.swing.JLabel lbIconoPaquete;
    private javax.swing.JPanel pFondo;
    private javax.swing.JRadioButton rbCodigCliente;
    private javax.swing.JRadioButton rbCodigoPaquete;
    private javax.swing.JRadioButton rbFechaRegistro;
    private javax.swing.JScrollPane scTablaClientes;
    private javax.swing.JTable tPaquetes;
    private javax.swing.JTextField tfCodigoCliente;
    private javax.swing.JTextField tfCodigoPaquete;
    // End of variables declaration//GEN-END:variables

    @Override
    public Icon ingresarImagen(String direccion){
        Icon i = new ImageIcon(getClass().getResource(direccion));
        return i;
    }

    @Override
    public final void centrarPantalla() {
        Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
        //para obtener las dimensiones de la pantalla
        Dimension dimen = this.getSize();
        //igual pero para la ventana
        this.setLocation(
            (pantalla.width - dimen.width) / 2,
            (pantalla.height - dimen.height) / 2);
    }

    @Override
    public void ponerImagenPanel(String direccion,javax.swing.JPanel pFondo){
        ImagenFondo Imagen = new ImagenFondo(pFondo.getWidth(),pFondo.getHeight(),direccion);
        pFondo.add(Imagen);
        pFondo.repaint();
    }
	
	@Override
    public void asignarIcono(){
        Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/vista/imagen/iconoAvion.png"));
        this.setIconImage(icon);
    }
}
